<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Mute Map of Turkey</title>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
    <style>
        body {
            margin: 0;
            font-family: Arial, sans-serif;
        }

        #map-container {
            width: 80%; /* Adjust width as needed */
            margin: 20px auto; /* Center the map horizontally with some margin */
            border: 1px solid #ddd; /* Optional border for styling */
            border-radius: 8px; /* Rounded corners */
            overflow: hidden; /* Ensures clean edges with rounded corners */
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Subtle shadow for design */
        }

        #map {
            width: 100%;
            height: 500px; /* Fixed height for the map */
        }
    </style>
</head>
<body>
    <h1 style="text-align: center;">Mute Map of Turkey</h1>
    <div id="map-container">
        <div id="map"></div>
    </div>

    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
    <script>
        // Initialize the map
        const map = L.map('map', {
            zoom: 6,
            dragging: false, // Disable dragging
            scrollWheelZoom: false, // Disable scroll zoom
            doubleClickZoom: false, // Disable double-click zoom
            touchZoom: false, // Disable touch zoom
            boxZoom: false // Disable box zoom
        });

        // Add a mute tile layer (Carto Light)
        L.tileLayer('https://{s}.basemaps.cartocdn.com/light_nolabels/{z}/{x}/{y}{r}.png', {
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors &copy; <a href="https://carto.com/">CARTO</a>',
            subdomains: 'abcd',
            maxZoom: 19
        }).addTo(map);

        // Define Turkey's borders using GeoJSON (replace with actual GeoJSON data)
        const turkeyGeoJSON = {
            "type": "FeatureCollection",
            "features": [
                {
                    "type": "Feature",
                    "properties": {},
                    "geometry": {
                        "type": "Polygon",
                        "coordinates": [
                            [
                                [26.0, 36.0],
                                [26.0, 42.1],
                                [45.0, 42.1],
                                [45.0, 36.0],
                                [26.0, 36.0]
                            ]
                        ]
                    }
                }
            ]
        };

        // Add the GeoJSON layer for Turkey to the map with a style
        const turkeyLayer = L.geoJSON(turkeyGeoJSON, {
            style: function (feature) {
                return {
                    color: 'blue', // Border color
                    weight: 2, // Border width
                    opacity: 1, // Border opacity
                    fillColor: 'rgba(0, 0, 255, 0.3)', // Fill color with opacity
                    fillOpacity: 0.3 // Fill opacity
                };
            }
        }).addTo(map);

        // Ensure the map adjusts to the bounds of the GeoJSON layer
        turkeyLayer.on('add', function() {
            map.fitBounds(turkeyLayer.getBounds());
        });
    </script>
</body>
</html>
